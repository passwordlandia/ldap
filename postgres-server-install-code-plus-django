#!/bin/bash
sudo yum install -y epel-release
sudo yum install -y python-pip python-devel gcc postgresql-server postgresql-devel postgresql-contrib

sudo postgresql-setup initdb
sudo systemctl enable postgresql
sudo systemctl start postgresql

cp /var/lib/pgsql/data/pg_hba.conf /var/lib/pgsql/data/pg_hba.conf.bak

sed -i 's/ident/md5/g' /var/lib/pgsql/data/pg_hba.conf

sudo systemctl restart postgresql
sudo systemctl enable postgresql

sudo su - postgres
psql

sudo yum -y install wget

wget https://raw.githubusercontent.com/passwordlandia/ldap/master/sqlfile.sql

sudo -i -u postgres psql -U postgres -f sqlfile.sql

###You are done. If you want to test this environment, SSH into the server and type 
###sudo systemctl status postgresql###


######This next section is on a new server for Django. It is spun up after a successful above. This will be 
######done on a new server again to repeat. You would use centos7, http and https and micro.####

#!/bin/bash
yum -y install pip
yum -y install python-pip
yum install -y pip install virtualenv
yum -y pip install --upgrade pip

mkdir /opt/myproject
cd /opt/myproject/

pip install virtualenv
virtualenv myprojectenv
source myprojectenv/bin/activate

pip install django psycopg2
django-admin.py startproject myproject .

yum -y install tree

cd myproject/

vim settings.py 
####This will be a sed line instead ###### vim ~/myproject/myproject/settings.py
. . .

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

. . .

#######From this Above ###########

First, change the engine so that it points to the postgresql_psycopg2 backend instead of the sqlite3 backend.
For the NAME, use the name of your database (myproject in our example). We also need to add login credentials.
We need the username, password, and host to connect to. We'll add and leave blank the port option so that the default is selected
. . .

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'myproject',
        'USER': 'myprojectuser',
        'PASSWORD': 'password',
        'HOST': 'localhost',
        'PORT': '',
    }
}

. . .

#######To This Above Using The Steps Outlined#################

When you are finished, save and close the file.

cd ~/myproject
python manage.py makemigrations
python manage.py migrate

source myprojectenv/bin/activate

python manage.py createsuperuser

python manage.py runserver 0.0.0.0:8000

http://server_domain_or_IP:8000

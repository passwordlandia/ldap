#!/bin/bash

yum install -y epel-release
yum install -y python-pip python-devel gcc postgresql-server postgresql-devel postgresql-contrib


postgresql-setup initdb
systemctl enable postgresql
systemctl start postgresql

cp /var/lib/pgsql/data/pg_hba.conf /var/lib/pgsql/data/pg_hba.conf.bak

sed -i 's/ident/md5/g' /var/lib/pgsql/data/pg_hba.conf

systemctl restart postgresql
systemctl enable postgresql

sudo su - postgres
psql

yum -y install wget

wget https://raw.githubusercontent.com/passwordlandia/ldap/master/sqlfile.sql

sudo -i -u postgres psql -U postgres -f sqlfile.sql

###You are done. If you want to test this environment, SSH into the server and type 
###sudo systemctl status postgresql###


######This next section is on a new server for Django. It is spun up after a successful above. This will be 
######done on a new server again to repeat. You would use centos7, http and https and micro.####

yum -y install pip
yum -y install python-pip
yum install -y pip install virtualenv
yum -y pip install --upgrade pip

mkdir /opt/myproject
cd /opt/myproject/

pip install virtualenv
virtualenv myprojectenv
source myprojectenv/bin/activate

pip install django psycopg2
django-admin.py startproject myproject .

yum -y install tree

cd myproject/
cd myproject/

settings_file_read = open("/opt/django/myproject/settings.py", "r+")
count = 0
remove_line = False
new_settings_file = ""
for line in settings_file_read:
    if "DATABASES = {" in line:
        remove_line = True
    if remove_line:
        if "{" in line:
            count = count + 1
        if "}" in line:
            count = count - 1
        settings_file_read.next()
        if count == 0:
            remove_line = False
    else:
        new_settings_file = new_settings_file + line
settings_file_read.close()
settings_file_write = open("/opt/django/myproject/settings.py", "w")
settings_file_write.write(new_settings_file)

vim settings.py 


cd ~/myproject
python manage.py makemigrations
python manage.py migrate

source myprojectenv/bin/activate

python manage.py createsuperuser

python manage.py runserver 0.0.0.0:8000

http://server_domain_or_IP:8000
